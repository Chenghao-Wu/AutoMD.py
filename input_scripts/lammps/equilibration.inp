
# ----------------------------------
## READ_RESTART
# ----------------------------------
read_restart ${read_res}

# ----------------- Init Section -----------------
#units real
#atom_style full
bond_style hybrid harmonic
angle_style hybrid harmonic
dihedral_style hybrid opls

#pair_style lj/cut/coul/cut 10.0 10.0
pair_style lj/cut/coul/long 10.0 10.0
kspace_style pppm 0.0001

pair_modify mix geometric
special_bonds lj/coul 0.0 0.0 0.5

    
# ----------------- Settings Section -----------------
include "./simulation_inputs/system.in.settings"

# ----------------- Charges Section -----------------
include "./simulation_inputs/system.in.charges"


if "${run_phase} == 1" then "reset_timestep 0"

# ----------------------------------
## Neigh_list Calc Frequency
# ----------------------------------
neigh_modify delay 0 every 1 check yes

# ----------------------------------
## Saving Frequency (50 frames)
# ----------------------------------
variable ts_save equal floor(${steps_equ}*0.01)

# ----------------------------------
## DUMP
# ----------------------------------
dump 1 all custom ${ts_save} ./equilibration/trajectory/trajectory_${usic}_${trial}.equ.custom type x y z ix iy iz
dump_modify 1 first no sort id

# ----------------------------------
## CHECKPOINT
# ----------------------------------
if "${set_CheckPoint} == 1" then "restart ${restartf} ./equilibration/restart/restart_${usic}_${trial}.equ.restart"

# ----------------------------------
## FIX
# ----------------------------------
fix 1 all momentum 1000 linear 1 1 1 angular

variable T equal ${Temp}/1000.0

fix 2 all npt temp ${T} ${T} 100.0 iso 1.0 1.0 1000.0

# ----------------------------------
## THERMO_STYLE
# ----------------------------------
thermo_style custom step temp press pe ke etotal ebond eangle epair lx ly lz xlo xhi ylo yhi zlo zhi vol density dt time cpu tpcpu spcpu cpuremain

# ----------------------------------
## RUN_STYLE
# ----------------------------------
run_style verlet


# ----------------------------------
## EQUILIBRATION RUN
# ----------------------------------
timestep ${ts}
thermo ${ts_save}
run ${steps_equ}
# ----------------------------------

# ----------------------------------
## WRITE_RESTART
# ----------------------------------
write_restart ${write_res}

