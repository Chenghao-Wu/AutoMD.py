#   Force-field example:
#
# This is an example of a general force-field file in moltemplate
# format.  I hope that end-users can read this file and modify
# it to build their own custom force-field files.
# This is an abbreviated version of the full "oplsaa.lt" file
# (...which I hope is easier to read.  It contains only the atom
# types and relevant parameters needed for simple alkanes and alkenes)
#
# USAGE: You can create molecules using this force-field this way:
#
# MyMolecule inherits OPLSAA {
#  # atom-id  mol-id atom-type charge    X        Y        Z
#  write('Data Atoms') {
#    $atom:C1  $mol @atom:CTH2   0.00  -0.6695    0.000000  0.000000
#    $atom:H11 $mol @atom:HCen 0.00  -1.234217 -0.854458  0.000000
#         :              :     :      :         :         :
#   }
# }
#
# (Do not use this file.  Use the full "oplsaa.lt" instead.)



OPLSAA {


  # Below we will use lammps "set" command to assign atom charges
  # by atom type.  http://lammps.sandia.gov/doc/set.html

  write_once("In Charges") {
    set type @atom:CT3        charge -0.18      # "Alkane CH3-"
    set type @atom:CT2        charge -0.12      # "Alkane -CH2-"
    set type @atom:CTH        charge -0.06      # "Alkane >CH-"
    set type @atom:CT         charge  0.0       # "Alkane >C<"
    set type @atom:HCal       charge  0.06      # "Alkane H-C"
    set type @atom:CH2en      charge -0.23      # "Alkene H2-C="
    set type @atom:HCen       charge  0.115     # "Alkene H-C="
  } #(end of atom partial charges)

  # NOTE: In addition to setting atom charge by atom type, you can add
  #    write_once("Data Charge By Bond") {
  #      @atom:A @atom:B 0.05 -0.05
  #    }
  # sections to your force-field file.  This defines rules to assign 
  # incremental charges to pairs of atoms depending on who they are bonded to.
  # (These are also called "bond_increments".)


  write_once("Data Masses") {
    @atom:CT3     12.011
    @atom:CT2     12.011
    @atom:CTH     12.011
    @atom:CT      12.011
    @atom:HCal     1.008
    @atom:CH2en    12.011
    @atom:HCen     1.008
  } #(end of atom masses)



  # ---------- EQUIVALENCE CATEGORIES for bonded interaction lookup ----------
  #  Each type of atom has a separate ID used for looking up bond parameters
  #  and a separate ID for looking up 3-body angle interaction parameters
  #  and a separate ID for looking up 4-body dihedral interaction parameters
  #  and a separate ID for looking up 4-body improper interaction parameters
  #  The complete @atom type name includes ALL of these ID numbers.  There's
  #  no need to force the end-user to type the complete name of each atom.
  #  The "replace" command used below informs moltemplate that the short
  #  @atom names we have been using above are equivalent to the complete
  #  @atom names used below:

  replace{ @atom:CT3 @atom:CT3_b13_a13_d13_i13 }
  replace{ @atom:CT2 @atom:CT2_b13_a13_d13_i13 }
  replace{ @atom:CTH @atom:CTH_b13_a13_d13_i13 }
  replace{ @atom:CT  @atom:CT_b13_a13_d13_i13 }
  replace{ @atom:HCal @atom:HCal_b46_a46_d46_i46 }
  replace{ @atom:CH2en @atom:CH2en_b47_a47_d47_i47 }
  replace{ @atom:HCen  @atom:HCen_b46_a46_d46_i46 }


  # ------------------ Non-Bonded Interactions: -------------------------
  # http://lammps.sandia.gov/doc/pair_lj.html
  # Syntax:
  # pair_coeff    AtomType1    AtomType2   pair_style_name  parameters...

  write_once("In Settings") {
    pair_coeff @atom:CT3_b13_a13_d13_i13  @atom:CT3_b13_a13_d13_i13 lj/cut/coul/long 0.066 3.5
    pair_coeff @atom:CT2_b13_a13_d13_i13  @atom:CT2_b13_a13_d13_i13 lj/cut/coul/long 0.066 3.5
    pair_coeff @atom:CTH_b13_a13_d13_i13  @atom:CTH_b13_a13_d13_i13 lj/cut/coul/long 0.066 3.5
    pair_coeff @atom:CT_b13_a13_d13_i13   @atom:CT_b13_a13_d13_i13 lj/cut/coul/long 0.066 3.5
    pair_coeff @atom:HCal_b46_a46_d46_i46 @atom:HCal_b46_a46_d46_i46 lj/cut/coul/long 0.03 2.5
    pair_coeff @atom:CH2en_b47_a47_d47_i47 @atom:CH2en_b47_a47_d47_i47 lj/cut/coul/long 0.076 3.55
    pair_coeff @atom:HCen_b46_a46_d46_i46  @atom:HCen_b46_a46_d46_i46 lj/cut/coul/long 0.03 2.42
  } #(end of pair_coeffs)



  # ------- Bonded Interactions: -------
  # http://lammps.sandia.gov/doc/bond_harmonic.html
  # Syntax:  
  # bond_coeff BondTypeName BondStyle  parameters...

  write_once("In Settings") {
    bond_coeff @bond:13-13 harmonic 268.0 1.529
    bond_coeff @bond:13-46 harmonic 340.0 1.09
    bond_coeff @bond:13-47 harmonic 317.0 1.51
    bond_coeff @bond:46-47 harmonic 340.0 1.08
    bond_coeff @bond:47-47 harmonic 549.0 1.34
  } #(end of bond_coeffs)

  # Rules for assigning bond types by atom type:
  # BondTypeName      AtomType1         AtomType2
  #   (* = wildcard)

  write_once("Data Bonds By Type") {
    @bond:13-13 @atom:*_b13_a*_d*_i* @atom:*_b13_a*_d*_i*
    @bond:13-46 @atom:*_b13_a*_d*_i* @atom:*_b46_a*_d*_i*
    @bond:13-47 @atom:*_b13_a*_d*_i* @atom:*_b47_a*_d*_i*
    @bond:46-47 @atom:*_b46_a*_d*_i* @atom:*_b47_a*_d*_i*
    @bond:47-47 @atom:*_b47_a*_d*_i* @atom:*_b47_a*_d*_i*
  } #(end of bonds by type)



  # ------- Angle Interactions -------
  # http://lammps.sandia.gov/doc/angle_harmonic.html
  # Syntax:  
  # angle_coeff AngleTypeName  AngleStyle  parameters...

  write_once("In Settings") {
    angle_coeff @angle:13-13-13 harmonic 58.35 112.7
    angle_coeff @angle:13-13-46 harmonic 37.5 110.7
    angle_coeff @angle:13-13-47 harmonic 63.0 111.1
    angle_coeff @angle:13-47-13 harmonic 70.0 130.0
    angle_coeff @angle:13-47-46 harmonic 35.0 117.0
    angle_coeff @angle:13-47-47 harmonic 70.0 124.0
    angle_coeff @angle:46-13-46 harmonic 33.0 107.8
    angle_coeff @angle:46-13-47 harmonic 35.0 109.5
    angle_coeff @angle:46-47-46 harmonic 35.0 117.0
    angle_coeff @angle:46-47-47 harmonic 35.0 120.0
    angle_coeff @angle:47-13-47 harmonic 63.0 112.4
  } #(end of angle_coeffs)

  # Rules for creating angle interactions according to atom type:
  #   AngleTypeName     AtomType1            AtomType2            AtomType3
  #   (* = wildcard)

  write_once("Data Angles By Type") {
    @angle:13-13-13 @atom:*_b*_a13_d*_i* @atom:*_b*_a13_d*_i* @atom:*_b*_a13_d*_i*
    @angle:13-13-46 @atom:*_b*_a13_d*_i* @atom:*_b*_a13_d*_i* @atom:*_b*_a46_d*_i*
    @angle:13-13-47 @atom:*_b*_a13_d*_i* @atom:*_b*_a13_d*_i* @atom:*_b*_a47_d*_i*
    @angle:13-47-13 @atom:*_b*_a13_d*_i* @atom:*_b*_a47_d*_i* @atom:*_b*_a13_d*_i*
    @angle:13-47-46 @atom:*_b*_a13_d*_i* @atom:*_b*_a47_d*_i* @atom:*_b*_a46_d*_i*
    @angle:13-47-47 @atom:*_b*_a13_d*_i* @atom:*_b*_a47_d*_i* @atom:*_b*_a47_d*_i*
    @angle:46-13-46 @atom:*_b*_a46_d*_i* @atom:*_b*_a13_d*_i* @atom:*_b*_a46_d*_i*
    @angle:46-13-47 @atom:*_b*_a46_d*_i* @atom:*_b*_a13_d*_i* @atom:*_b*_a47_d*_i*
    @angle:46-47-46 @atom:*_b*_a46_d*_i* @atom:*_b*_a47_d*_i* @atom:*_b*_a46_d*_i*
    @angle:46-47-47 @atom:*_b*_a46_d*_i* @atom:*_b*_a47_d*_i* @atom:*_b*_a47_d*_i*
    @angle:47-13-47 @atom:*_b*_a47_d*_i* @atom:*_b*_a13_d*_i* @atom:*_b*_a47_d*_i*
  } #(end of angles by type)



  # ----------- Dihedral Interactions  ------------
  # http://lammps.sandia.gov/doc/dihedral_opls.html
  # Syntax:  
  # dihedral_coeff DihedralTypeName  DihedralStyle  parameters...

  write_once("In Settings") {
    # General rules:
    dihedral_coeff @dihedral:X-47-47-X opls 0.0 14.0 0.0 0.0
    dihedral_coeff @dihedral:X-13-13-13 opls 1.711 -0.5 0.663 0.0
    dihedral_coeff @dihedral:X-13-47-13 opls 1.711 -0.5 0.663 0.0
    dihedral_coeff @dihedral:X-13-47-46 opls 0.0 0.0 0.468 0.0
    dihedral_coeff @dihedral:X-13-47-47 opls 0.5 0.0 0.0 0.0

    # Specific rules (which override the general rules):
    dihedral_coeff @dihedral:13-13-13-13 opls 1.3 -0.05 0.2 0.0
    dihedral_coeff @dihedral:13-13-13-47 opls 1.3 -0.05 0.2 0.0
    dihedral_coeff @dihedral:13-13-47-13 opls 2.817 -0.169 0.543 0.0
    dihedral_coeff @dihedral:13-13-47-47 opls 0.346 0.405 -0.904 0.0
    dihedral_coeff @dihedral:13-47-47-13 opls 0.0 14.0 0.0 0.0
    dihedral_coeff @dihedral:13-47-47-46 opls 0.0 14.0 0.0 0.0
    dihedral_coeff @dihedral:46-13-13-46 opls 0.0 0.0 0.3 0.0
    dihedral_coeff @dihedral:46-13-13-47 opls 0.0 0.0 0.366 0.0
    dihedral_coeff @dihedral:46-13-47-13 opls 0.0 0.0 0.3 0.0
    dihedral_coeff @dihedral:46-13-47-46 opls 0.0 0.0 0.318 0.0
    dihedral_coeff @dihedral:46-13-47-47 opls 0.0 0.0 -0.372 0.0
    dihedral_coeff @dihedral:46-47-47-46 opls 0.0 14.0 0.0 0.0
    dihedral_coeff @dihedral:47-13-47-13 opls 0.0 -8.0 0.0 0.0
    dihedral_coeff @dihedral:47-13-47-46 opls 0.0 -8.0 0.0 0.0
    dihedral_coeff @dihedral:47-46-47-13 opls 0.0 -8.0 0.0 0.0
    dihedral_coeff @dihedral:47-46-47-46 opls 0.0 -8.0 0.0 0.0
  } #(end of dihedral_coeffs)

  # Rules for creating dihedral interactions according to atom type:
  #   DihedralTypeName     AtomType1     AtomType2     AtomType3     AtomType4
  #   (* = wildcard)

  write_once("Data Dihedrals By Type") {
    @dihedral:X-47-47-X   @atom:*              @atom:*_b*_a*_d47_i* @atom:*_b*_a*_d47_i* @atom:*
    @dihedral:X-13-13-13  @atom:*              @atom:*_b*_a*_d13_i* @atom:*_b*_a*_d13_i* @atom:*_b*_a*_d13_i*
    @dihedral:X-13-47-13  @atom:*              @atom:*_b*_a*_d13_i* @atom:*_b*_a*_d47_i* @atom:*_b*_a*_d13_i*
    @dihedral:X-13-47-46  @atom:*              @atom:*_b*_a*_d13_i* @atom:*_b*_a*_d47_i* @atom:*_b*_a*_d46_i*
    @dihedral:X-13-47-47  @atom:*              @atom:*_b*_a*_d13_i* @atom:*_b*_a*_d47_i* @atom:*_b*_a*_d47_i*
    @dihedral:13-13-13-13 @atom:*_b*_a*_d13_i* @atom:*_b*_a*_d13_i* @atom:*_b*_a*_d13_i* @atom:*_b*_a*_d13_i*
    @dihedral:13-13-13-47 @atom:*_b*_a*_d13_i* @atom:*_b*_a*_d13_i* @atom:*_b*_a*_d13_i* @atom:*_b*_a*_d47_i*
    @dihedral:13-13-47-13 @atom:*_b*_a*_d13_i* @atom:*_b*_a*_d13_i* @atom:*_b*_a*_d47_i* @atom:*_b*_a*_d13_i*
    @dihedral:13-13-47-47 @atom:*_b*_a*_d13_i* @atom:*_b*_a*_d13_i* @atom:*_b*_a*_d47_i* @atom:*_b*_a*_d47_i*
    @dihedral:13-47-47-13 @atom:*_b*_a*_d13_i* @atom:*_b*_a*_d47_i* @atom:*_b*_a*_d47_i* @atom:*_b*_a*_d13_i*
    @dihedral:13-47-47-46 @atom:*_b*_a*_d13_i* @atom:*_b*_a*_d47_i* @atom:*_b*_a*_d47_i* @atom:*_b*_a*_d46_i*
    @dihedral:46-13-13-46 @atom:*_b*_a*_d46_i* @atom:*_b*_a*_d13_i* @atom:*_b*_a*_d13_i* @atom:*_b*_a*_d46_i*
    @dihedral:46-13-13-47 @atom:*_b*_a*_d46_i* @atom:*_b*_a*_d13_i* @atom:*_b*_a*_d13_i* @atom:*_b*_a*_d47_i*
    @dihedral:46-13-47-13 @atom:*_b*_a*_d46_i* @atom:*_b*_a*_d13_i* @atom:*_b*_a*_d47_i* @atom:*_b*_a*_d13_i*
    @dihedral:46-13-47-46 @atom:*_b*_a*_d46_i* @atom:*_b*_a*_d13_i* @atom:*_b*_a*_d47_i* @atom:*_b*_a*_d46_i*
    @dihedral:46-13-47-47 @atom:*_b*_a*_d46_i* @atom:*_b*_a*_d13_i* @atom:*_b*_a*_d47_i* @atom:*_b*_a*_d47_i*
    @dihedral:46-47-47-46 @atom:*_b*_a*_d46_i* @atom:*_b*_a*_d47_i* @atom:*_b*_a*_d47_i* @atom:*_b*_a*_d46_i*
    @dihedral:47-13-47-13 @atom:*_b*_a*_d47_i* @atom:*_b*_a*_d13_i* @atom:*_b*_a*_d47_i* @atom:*_b*_a*_d13_i*
    @dihedral:47-13-47-46 @atom:*_b*_a*_d47_i* @atom:*_b*_a*_d13_i* @atom:*_b*_a*_d47_i* @atom:*_b*_a*_d46_i*
    @dihedral:47-46-47-13 @atom:*_b*_a*_d47_i* @atom:*_b*_a*_d46_i* @atom:*_b*_a*_d47_i* @atom:*_b*_a*_d13_i*
    @dihedral:47-46-47-46 @atom:*_b*_a*_d47_i* @atom:*_b*_a*_d46_i* @atom:*_b*_a*_d47_i* @atom:*_b*_a*_d46_i*
  } #(end of dihedrals by type)




  # ---------- Improper Interactions  ----------
  # http://lammps.sandia.gov/doc/improper_harmonic.html

  write_once("In Settings") {
    improper_coeff @improper:X-X-47-X harmonic 15.0 180.0
  }

  #   ImproperTypeName   AtomType1    AtomType2       AtomType3       AtomType4
  #   (* = wildcard)

  write_once("Data Impropers By Type (opls_imp.py)") {
    @improper:X-X-47-X   @atom:*      @atom:*   @atom:*_b*_a*_d*_i47   @atom:*
  }

  # NOTE: Sometimes the default improper-creation rules do not work for a 
  #       particular force-field.  The "(opls_imp.py)" text above tells
  #       moltemplate to look for a file named "opls_imp.py" (normally found in
  #       "src/nbody_alternate_symmetry/") which tells moltemplate to change
  #       the order in the list of atoms in an improper interaction, or the
  #       criteria used to decide whether a new improper interaction should
  #       be created.  The default rules are located in "src/nbody_Impropers.py"


  # ------- Choosing LAMMPS Interaction Styles  -------
  # LAMMPS supports many different kinds of bonded and non-bonded interactions
  # which can be selected at run time.  Although we specified these above in the
  # pair_coeff, bond_coeff, angle_coeff, dihedral_coeff, and improper_coeff
  # commands, we must also specify this in the "In Init" section:

  write_once("In Init") {
    units real
    atom_style full
    bond_style hybrid harmonic
    angle_style hybrid harmonic
    dihedral_style hybrid opls
    improper_style hybrid harmonic
    pair_style hybrid lj/cut/coul/long 10.0 10.0
    pair_modify mix geometric
    special_bonds lj/coul 0.0 0.0 0.5
    kspace_style pppm 0.0001
  } #end of init parameters

  # Optional:
  #       I use "hybrid" styles in case the user later wishes to
  #       combine the molecules built using this force-field with other
  #       molecules that use other styles.  (This is not necessarily
  #       a good idea, but LAMMPS and moltemplate both allow it.)
  #       For more information:
  #       http://lammps.sandia.gov/doc/pair_hybrid.html
  #       http://lammps.sandia.gov/doc/bond_hybrid.html
  #       http://lammps.sandia.gov/doc/angle_hybrid.html
  #       http://lammps.sandia.gov/doc/dihedral_hybrid.html
  #       http://lammps.sandia.gov/doc/improper_hybrid.html


}  # OPLSAA

