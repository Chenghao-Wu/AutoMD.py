# In moltemplate each molecule type is stored in a file whose format mimics the
# format of a LAMMPS "data" file, with "Atoms", "Bonds", and "Angles" sections.
# Once defined, these molecules can be copied and moved to build larger systems.
#
# "SPCE" ("extended simple point charge") is one of several popular water models
# (See Berendsen H.J.C et al., J.Phys.Chem. Vol91 pp.6269-6271,1987 for details)
#
# file "spce.lt" 
#
#    H1     H2
#      \   /
#        O


SPCE {

  #  ---- Definition of the "SPCE" (water molecule type) ----

  # The "Data Atoms" section is a list of atom attributes (type, charge, x,y,z)
  # AtomID  MoleculeID AtomType Charge   X        Y        Z

  write("Data Atoms") {
    $atom:o    $mol    @atom:O -0.8476  0.0000000 0.00000 0.000000
    $atom:h1   $mol    @atom:H  0.4238  0.8164904 0.00000  0.5773590
    $atom:h2   $mol    @atom:H  0.4238  -0.8164904 0.00000 0.5773590
  }
  # Note: LAMMPS expects an integer in the 2nd column (the Molecule-ID number).
  #       If we put "$mol" there, moltemplate will generate this integer for you

  # A list of the bonds in the molecule:
  # BondID    BondType  AtomID1  AtomID2

  write("Data Bonds") {
    $bond:OH1 @bond:OH $atom:o $atom:h1
    $bond:OH2 @bond:OH $atom:o $atom:h2
  }

  # A list of the angles in the molecule:
  # AngleID    AngleType  AtomID1  AtomID2 AtomID3

  write("Data Angles") {
    $angle:HOH @angle:HOH $atom:h1 $atom:o $atom:h2
  }

  # The mass of each atom type:

  write_once("Data Masses") {
    @atom:O 15.9994
    @atom:H 1.008
  }


  # ---- Where to put force field parameters? ----
  # Moltemplate allows you to specify force-field parameters anywhere you want.
  # Sometimes it is convenient to nest them within a molecule's definition.
  # The "In Settings" section contains LAMMPS commands which typically define 
  # force-field parameters (eg "pair_coeff", "bond_coeff", "angle_coeff") and
  # constraints (eg "fix shake") which are specific to this type of molecule.
  # (For more complicated simulations, it's convenient to define a "ForceField"
  # object containing force field parameters shared by many different types of 
  # molecules. Since this is a simple example, there is no need to do that.)

  write_once("In Settings") {
    bond_coeff   @bond:OH           600.0   1.0
    # explanation:  http://lammps.sandia.gov/doc/bond_harmonic.html

    angle_coeff  @angle:HOH         75.0    109.47
    # explanation:  http://lammps.sandia.gov/doc/angle_harmonic.html
 
    pair_coeff   @atom:O @atom:O    0.1553  3.166 
    pair_coeff   @atom:H @atom:H    0.0     2.058
    # explanation:  http://lammps.sandia.gov/doc/pair_charmm.html

    # OPTIONAL: We want the water molecules to behave like rigid objects, so 
    # we apply the "SHAKE" constraint to the group of atoms in water molecules.
    # (SHAKE is used to make bonds and angles rigid.)

    group gSPCE type  @atom:O  @atom:H
    # explanation:  http://lammps.sandia.gov/doc/group.html

    fix fShakeSPCE gSPCE shake 0.0001 10 100 b @bond:OH a @angle:HOH
    # explanation:  http://lammps.sandia.gov/doc/fix_shake.html
    # (Remember to disable this during minimization using "unfix fShakeSPCE")
 
  }

  # LAMMPS requires that some commands must be issued in a certain order.
  #   (IE.  You must inform LAMMPS the kind of simulation you wish to run
  #    before supplying LAMMPS with numeric parameters for that simulation.)
  # The "In Init" section is where you put commands which must be run before
  # all other commands in the simulation (such as the commands in "In Settings")

  write_once("In Init") {

    units        real
    # explanation:  http://lammps.sandia.gov/doc/units.html

    # Specify the attributes of the particles in our system (eg. "full")
    atom_style   full
    # explanation:  http://lammps.sandia.gov/doc/atom_style.html

    # Specify the kinds of formulas we want to use to calculate
    # the forces in our system (ie. force-field "styles")
    bond_style   harmonic
    angle_style  harmonic
    pair_style   lj/charmm/coul/long 9.0 10.0 10.0
    pair_modify  mix arithmetic
    # explanation:  http://lammps.sandia.gov/doc/pair_modify.html
    kspace_style pppm 0.0001
    # explanation:  http://lammps.sandia.gov/doc/kspace_style.html
  }

} # end of definition of "SPCE" water molecule type

